<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>riceteacatpanda</title>
    <url>/2020/01/21/riceteacatpanda-ctf/</url>
    <content><![CDATA[<p>寒假闲来无事，还是想提高一下姿势水平，就打打 <a href="https://ctftime.org/event/910" target="_blank" rel="noopener">riceteacatpanda</a> ctf玩玩咯</p>
<a id="more"></a>

<h2 id="Robots-Yeah-I-know-pretty-obvious"><a href="#Robots-Yeah-I-know-pretty-obvious" class="headerlink" title="Robots. Yeah, I know, pretty obvious."></a>Robots. Yeah, I know, pretty obvious.</h2><p>打开题目啥也没有，只有题目描述</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">So, we know that Delphine is a cook. A wonderful one, at that. But did you know that GIANt used to make robots? Yeah, GIANt robots.</span><br></pre></td></tr></table></figure>

<p>不得不说，这个比赛是真的奇怪，web题的容器都没有…</p>
<p>一开始以为是社工题，在google上搜了好久的GIANt,但是无果</p>
<p>也是自己傻，以后看到robots就直接看网站的robots.txt得了</p>
<p>在url中输入 <a href="https://riceteacatpanda.wtf/robots.txt" target="_blank" rel="noopener">https://riceteacatpanda.wtf/robots.txt</a></p>
<p>发现果然有robots页面，显示如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: </span><br><span class="line">&#x2F;robot-nurses</span><br><span class="line">&#x2F;flag</span><br></pre></td></tr></table></figure>

<p>看到/flag就很兴奋了，但点进去只有一段视频…</p>
<p>那就试试/robot-nurses，果然在</p>
<p> <a href="https://riceteacatpanda.wtf/robot-nurses" target="_blank" rel="noopener">https://riceteacatpanda.wtf/robot-nurses</a></p>
<p>找到了flag</p>
<p>这里复习一下robots.txt内容</p>
<p> <strong>robots.txt</strong>（统一小写）是一种存放于<a href="https://zh.wikipedia.org/wiki/网站" target="_blank" rel="noopener">网站</a>根目录下的<a href="https://zh.wikipedia.org/wiki/ASCII" target="_blank" rel="noopener">ASCII</a>编码的<a href="https://zh.wikipedia.org/wiki/文本文件" target="_blank" rel="noopener">文本文件</a>，它通常告诉网络<a href="https://zh.wikipedia.org/wiki/搜索引擎" target="_blank" rel="noopener">搜索引擎</a>的漫游器（又称<a href="https://zh.wikipedia.org/wiki/网络蜘蛛" target="_blank" rel="noopener">网络蜘蛛</a>），此网站中的哪些内容是不应被搜索引擎的漫游器获取的，哪些是可以被漫游器获取的。因为一些系统中的URL是大小写敏感的，所以robots.txt的文件名应统一为小写。robots.txt应放置于网站的根目录下。如果想单独定义搜索引擎的漫游器访问子目录时的行为，那么可以将自定的设置合并到根目录下的robots.txt，或者使用robots<a href="https://zh.wikipedia.org/wiki/元数据" target="_blank" rel="noopener">元数据</a>（Metadata，又称元数据）。</p>
<p>例子： </p>
<p>允许所有的机器人：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow:</span><br></pre></td></tr></table></figure>

<p>另一写法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow:&#x2F;</span><br></pre></td></tr></table></figure>

<p>仅允许特定的机器人：（name_spider用真实名字代替）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: name_spider</span><br><span class="line">Allow:</span><br></pre></td></tr></table></figure>

<p>拦截所有的机器人：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;</span><br></pre></td></tr></table></figure>

<p>禁止所有机器人访问特定目录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;cgi-bin&#x2F;</span><br><span class="line">Disallow: &#x2F;images&#x2F;</span><br><span class="line">Disallow: &#x2F;tmp&#x2F;</span><br><span class="line">Disallow: &#x2F;private&#x2F;</span><br></pre></td></tr></table></figure>

<p>仅禁止坏爬虫访问特定目录（BadBot用真实的名字代替）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: BadBot</span><br><span class="line">Disallow: &#x2F;private&#x2F;</span><br></pre></td></tr></table></figure>

<p>禁止所有机器人访问特定文件类型：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;*.php$</span><br><span class="line">Disallow: &#x2F;*.js$</span><br><span class="line">Disallow: &#x2F;*.inc$</span><br><span class="line">Disallow: &#x2F;*.css$</span><br></pre></td></tr></table></figure>

<h2 id="No-Sleep"><a href="#No-Sleep" class="headerlink" title="No Sleep"></a>No Sleep</h2><p>打开Hint里的链接</p>
<p> <a href="https://riceteacatpanda.wtf/onlyrealgamers" target="_blank" rel="noopener">https://riceteacatpanda.wtf/onlyrealgamers</a> </p>
<p>发现页面中出现一个倒计时，显示一直到比赛结束才能看到flag。</p>
<p>这类题目还是见过很多了，果断F12，发现一段被混淆过的js代码非常可疑</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> _0x1d8e=[<span class="string">'gamerfuel=Jan\x2027,\x202020\x2004:20:00'</span>,<span class="string">'Jan\x2027,\x202020\x2004:20:00'</span>,<span class="string">'getTime'</span>,<span class="string">'exec'</span>,<span class="string">'floor'</span>,<span class="string">'getElementById'</span>,<span class="string">'gamer\x20timer'</span>,<span class="string">'AES'</span>,<span class="string">'decrypt'</span>,<span class="string">'U2FsdGVkX18kRm6FDkRVQfVuNPTxyOnJzpu8QnI/9UKoCXp6hQcley11nBnLIItj'</span>,<span class="string">'ok\x20boomer'</span>,<span class="string">'innerHTML'</span>,<span class="string">'Utf8'</span>,<span class="string">'cookie'</span>];(<span class="function"><span class="keyword">function</span>(<span class="params">_0x29eed8,_0x4bb4aa</span>)</span>&#123;<span class="keyword">var</span> _0x47e29c=<span class="function"><span class="keyword">function</span>(<span class="params">_0x2d3fd2</span>)</span>&#123;<span class="keyword">while</span>(--_0x2d3fd2)&#123;_0x29eed8[<span class="string">'push'</span>](_0x29eed8[<span class="string">'shift'</span>]());&#125;&#125;;_0x47e29c(++_0x4bb4aa);&#125;(_0x1d8e,<span class="number">0x99</span>));<span class="keyword">var</span> _0x2ad1=<span class="function"><span class="keyword">function</span>(<span class="params">_0x545e19,_0x47cdd3</span>)</span>&#123;_0x545e19=_0x545e19<span class="number">-0x0</span>;<span class="keyword">var</span> _0x4275c2=_0x1d8e[_0x545e19];<span class="keyword">return</span> _0x4275c2;&#125;;<span class="built_in">document</span>[_0x2ad1(<span class="string">'0x0'</span>)]=_0x2ad1(<span class="string">'0x1'</span>);<span class="keyword">var</span> countDownDate=<span class="keyword">new</span> <span class="built_in">Date</span>(_0x2ad1(<span class="string">'0x2'</span>))[_0x2ad1(<span class="string">'0x3'</span>)]();<span class="keyword">var</span> x=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> _0x27a8c6=<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="regexp">/[^=]*$/</span>[_0x2ad1(<span class="string">'0x4'</span>)](<span class="built_in">document</span>[_0x2ad1(<span class="string">'0x0'</span>)])[<span class="number">0x0</span>])[_0x2ad1(<span class="string">'0x3'</span>)]();<span class="keyword">var</span> _0x5b92f1=<span class="keyword">new</span> <span class="built_in">Date</span>()[<span class="string">'getTime'</span>]();<span class="keyword">var</span> _0x3a5a33=_0x27a8c6-_0x5b92f1;<span class="keyword">var</span> _0x4214a2=<span class="built_in">Math</span>[_0x2ad1(<span class="string">'0x5'</span>)](_0x3a5a33/(<span class="number">0x3e8</span>*<span class="number">0x3c</span>*<span class="number">0x3c</span>*<span class="number">0x18</span>));<span class="keyword">var</span> _0x48c0d9=<span class="built_in">Math</span>[_0x2ad1(<span class="string">'0x5'</span>)](_0x3a5a33%(<span class="number">0x3e8</span>*<span class="number">0x3c</span>*<span class="number">0x3c</span>*<span class="number">0x18</span>)/(<span class="number">0x3e8</span>*<span class="number">0x3c</span>*<span class="number">0x3c</span>));<span class="keyword">var</span> _0x2de271=<span class="built_in">Math</span>[_0x2ad1(<span class="string">'0x5'</span>)](_0x3a5a33%(<span class="number">0x3e8</span>*<span class="number">0x3c</span>*<span class="number">0x3c</span>)/(<span class="number">0x3e8</span>*<span class="number">0x3c</span>));<span class="keyword">var</span> _0x240ffb=<span class="built_in">Math</span>[<span class="string">'floor'</span>](_0x3a5a33%(<span class="number">0x3e8</span>*<span class="number">0x3c</span>)/<span class="number">0x3e8</span>);<span class="built_in">document</span>[_0x2ad1(<span class="string">'0x6'</span>)](_0x2ad1(<span class="string">'0x7'</span>))[<span class="string">'innerHTML'</span>]=_0x4214a2+<span class="string">'d\x20'</span>+_0x48c0d9+<span class="string">'h\x20'</span>+_0x2de271+<span class="string">'m\x20'</span>+_0x240ffb+<span class="string">'s\x20'</span>;<span class="keyword">if</span>(_0x3a5a33&lt;<span class="number">0x0</span>)&#123;clearInterval(x);<span class="keyword">var</span> _0x1018af=CryptoJS[_0x2ad1(<span class="string">'0x8'</span>)][_0x2ad1(<span class="string">'0x9'</span>)](_0x2ad1(<span class="string">'0xa'</span>),_0x2ad1(<span class="string">'0xb'</span>));<span class="built_in">document</span>[_0x2ad1(<span class="string">'0x6'</span>)](_0x2ad1(<span class="string">'0x7'</span>))[_0x2ad1(<span class="string">'0xc'</span>)]=_0x1018af[<span class="string">'toString'</span>](CryptoJS[<span class="string">'enc'</span>][_0x2ad1(<span class="string">'0xd'</span>)]);&#125;&#125;,<span class="number">0x3e8</span>);</span><br></pre></td></tr></table></figure>

<p>拿到js反混淆网站 <a href="https://tool.lu/js/" target="_blank" rel="noopener">https://tool.lu/js/</a> 做一下反混淆后就基本能看了</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _0x1d8e = <span class="string">"gamerfuel=Jan 27, 2020 04:20:00;Jan 27, 2020 04:20:00;getTime;exec;floor;getElementById;gamer timer;AES;decrypt;U2FsdGVkX18kRm6FDkRVQfVuNPTxyOnJzpu8QnI/9UKoCXp6hQcley11nBnLIItj;ok boomer;innerHTML;Utf8;cookie"</span>.split(<span class="string">";"</span>);</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (b = ++b; --b;) a.push(a.shift())</span><br><span class="line">&#125;)(_0x1d8e, <span class="number">153</span>);</span><br><span class="line"><span class="keyword">var</span> _0x2ad1 = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> _0x1d8e[a - <span class="number">0</span>]</span><br><span class="line">	&#125;;</span><br><span class="line"><span class="built_in">document</span>[_0x2ad1(<span class="string">"0x0"</span>)] = _0x2ad1(<span class="string">"0x1"</span>);</span><br><span class="line"><span class="keyword">var</span> countDownDate = (<span class="keyword">new</span> <span class="built_in">Date</span>(_0x2ad1(<span class="string">"0x2"</span>)))[_0x2ad1(<span class="string">"0x3"</span>)](),</span><br><span class="line">	x = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">var</span> a = (<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="regexp">/[^=]*$/</span> [_0x2ad1(<span class="string">"0x4"</span>)](<span class="built_in">document</span>[_0x2ad1(<span class="string">"0x0"</span>)])[<span class="number">0</span>]))[_0x2ad1(<span class="string">"0x3"</span>)](),</span><br><span class="line">			b = (<span class="keyword">new</span> <span class="built_in">Date</span>).getTime();</span><br><span class="line">		a -= b;</span><br><span class="line">		b = <span class="built_in">Math</span>[_0x2ad1(<span class="string">"0x5"</span>)](a / <span class="number">864E5</span>);</span><br><span class="line">		<span class="keyword">var</span> c = <span class="built_in">Math</span>[_0x2ad1(<span class="string">"0x5"</span>)](a % <span class="number">864E5</span> / <span class="number">36E5</span>),</span><br><span class="line">			d = <span class="built_in">Math</span>[_0x2ad1(<span class="string">"0x5"</span>)](a % <span class="number">36E5</span> / <span class="number">6E4</span>),</span><br><span class="line">			e = <span class="built_in">Math</span>.floor(a % <span class="number">6E4</span> / <span class="number">1E3</span>);</span><br><span class="line">		<span class="built_in">document</span>[_0x2ad1(<span class="string">"0x6"</span>)](_0x2ad1(<span class="string">"0x7"</span>)).innerHTML = b + <span class="string">"d "</span> + c + <span class="string">"h "</span> + d + <span class="string">"m "</span> + e + <span class="string">"s "</span>;</span><br><span class="line">		<span class="number">0</span> &gt; a &amp;&amp; (clearInterval(x), a = CryptoJS[_0x2ad1(<span class="string">"0x8"</span>)][_0x2ad1(<span class="string">"0x9"</span>)](_0x2ad1(<span class="string">"0xa"</span>), _0x2ad1(<span class="string">"0xb"</span>)), <span class="built_in">document</span>[_0x2ad1(<span class="string">"0x6"</span>)](_0x2ad1(<span class="string">"0x7"</span>))[_0x2ad1(<span class="string">"0xc"</span>)] = a.toString(CryptoJS.enc[_0x2ad1(<span class="string">"0xd"</span>)]))</span><br><span class="line">	&#125;, <span class="number">1E3</span>);</span><br></pre></td></tr></table></figure>

<p>审计这段代码，大概流程是</p>
<ol>
<li><p>变量_0x1d8e通过split方法提供一个字符数组给下面的function使用</p>
</li>
<li><p>在function中，依次通过0x0,0x1,0x2…调用数组中的值</p>
</li>
<li><p>关键在于这一段</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>[_0x2ad1(<span class="string">"0x0"</span>)] = _0x2ad1(<span class="string">"0x1"</span>);</span><br><span class="line"><span class="keyword">var</span> countDownDate = (<span class="keyword">new</span> <span class="built_in">Date</span>(_0x2ad1(<span class="string">"0x2"</span>)))[_0x2ad1(<span class="string">"0x3"</span>)](),</span><br></pre></td></tr></table></figure>

<p>取了0x0 = gamerfuel=Jan 27, 2020 04:20:00 </p>
<p>​        0x1= Jan 27, 2020 04:20:00</p>
<p>​        0x2 = getTime</p>
<p>​        0x3 = exec</p>
<p>其中的时间很明显就是最终的时间，那么直接在控制台里修改这段命令，将</p>
<p>_0x1d8e改为</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _0x1d8e = <span class="string">"gamerfuel=Jan 21, 2020 04:20:00;Jan 27, 2020 04:20:00;getTime;exec;floor;getElementById;gamer timer;AES;decrypt;U2FsdGVkX18kRm6FDkRVQfVuNPTxyOnJzpu8QnI/9UKoCXp6hQcley11nBnLIItj;ok boomer;innerHTML;Utf8;cookie"</span>.split(<span class="string">";"</span>);</span><br></pre></td></tr></table></figure>

<p>拿到flag</p>
</li>
</ol>
<h2 id="Phishing-for-Flags"><a href="#Phishing-for-Flags" class="headerlink" title="Phishing for Flags"></a>Phishing for Flags</h2><h2 id="Uwu"><a href="#Uwu" class="headerlink" title="Uwu?"></a>Uwu?</h2><h2 id="What’s-in-The-Box"><a href="#What’s-in-The-Box" class="headerlink" title="What’s in The Box?!"></a>What’s in The Box?!</h2><h2 id="Web-Invaders"><a href="#Web-Invaders" class="headerlink" title="Web Invaders"></a>Web Invaders</h2><h2 id="growls-at-the-chicken"><a href="#growls-at-the-chicken" class="headerlink" title="growls at the chicken"></a><em>growls at the chicken</em></h2>]]></content>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>First Blog</title>
    <url>/2020/01/19/First-Blog/</url>
    <content><![CDATA[<h1 id="Hexo搭建属于自己的博客"><a href="#Hexo搭建属于自己的博客" class="headerlink" title="Hexo搭建属于自己的博客"></a>Hexo搭建属于自己的博客</h1><p>转载：</p>
<blockquote>
<p><a href="https://thief.one/2017/03/03/Hexo搭建博客教程/" target="_blank" rel="noopener">https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</a> </p>
</blockquote>
<p>现在越来越多的人喜欢利用Github搭建静态网站，原因不外乎简单省钱。本人也利用hexo+github搭建了本博客，用于分享一些心得。在此过程中，折腾博客的各种配置以及功能占具了我一部分时间，在此详细记录下我是如何利用hexo+github搭建静态博客以及一些配置相关问题，以免过后遗忘，且当备份之用。</p>
<a id="more"></a>

<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul>
<li>下载node.js并安装（官网下载安装），默认会安装npm。</li>
<li>下载安装git（官网下载安装）</li>
<li>下载安装hexo。方法：打开cmd 运行<em>npm install -g hexo</em>（要翻墙）</li>
</ul>
<h3 id="本地搭建hexo静态博客"><a href="#本地搭建hexo静态博客" class="headerlink" title="本地搭建hexo静态博客"></a>本地搭建hexo静态博客</h3><ul>
<li>新建一个文件夹，如MyBlog</li>
<li>进入该文件夹内，右击运行git，输入：<em>hexo init</em>（生成hexo模板，可能要翻墙）</li>
<li>生成完模板，运行<em>npm install</em>（目前貌似不用运行这一步）</li>
<li>最后运行：<em>hexo server</em> （运行程序，访问本地localhost:4000可以看到博客已经搭建成功）</li>
</ul>
<h3 id="将博客与Github关联"><a href="#将博客与Github关联" class="headerlink" title="将博客与Github关联"></a>将博客与Github关联</h3><ul>
<li>在Github上创建名字为XXX.github.io的项目，XXX为自己的github用户名。</li>
<li>打开本地的MyBlog文件夹项目内的_config.yml配置文件，将其中的type设置为git</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:  type: git  repository: https:&#x2F;&#x2F;github.com&#x2F;tengzhangchao&#x2F;tengzhangchao.github.io.git  branch: master</span><br></pre></td></tr></table></figure>

<ul>
<li>运行：<em>npm install hexo-deployer-git –save</em></li>
<li>运行：<em>hexo g</em>（本地生成静态文件）</li>
<li>运行：<em>hexo d</em>（将本地静态文件推送至Github）</li>
</ul>
<p>此时，打开浏览器，访问<em><a href="http://tengzhangchao.github.io/" target="_blank" rel="noopener">http://tengzhangchao.github.io</a></em></p>
<h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>　　博客已经搭建好，也能通过github的域名访问，但总归还是用自己的域名比较舒服。因为我们需要设置将自己的域名绑定到github这个博客项目上。</p>
<ul>
<li><p>域名提供商设置</p>
<p>添加2条A记录：</p>
<p>@—&gt;192.30.252.154</p>
<p>@—&gt;192.30.252.153</p>
<p>添加一条CNAME记录：</p>
<p>CNAME—&gt;tengzhangchao.github.io</p>
</li>
<li><p>博客添加CNAME文件</p>
<p>配置完域名解析后，进入博客目录，在source目录下新建CNAME文件，写入域名，如：thief.one</p>
</li>
<li><p>运行：<em>hexo g</em></p>
</li>
<li><p>运行：<em>hexo d</em></p>
</li>
</ul>
<h3 id="更新博客内容"><a href="#更新博客内容" class="headerlink" title="更新博客内容"></a>更新博客内容</h3><p>　　至此博客已经搭建完毕，域名也已经正常解析，那么剩下的问题就是更新内容了。</p>
<h4 id="更新文章"><a href="#更新文章" class="headerlink" title="更新文章"></a>更新文章</h4><ul>
<li>在MyBlog目录下执行：<em>hexo new “我的第一篇文章”</em>，会在source-&gt;_posts文件夹内生成一个.md文件。</li>
<li>编辑该文件（遵循Markdown规则）</li>
<li>修改起始字段<ul>
<li>title 文章的标题</li>
<li>date 创建日期 （文件的创建日期 ）</li>
<li>updated 修改日期 （ 文件的修改日期）</li>
<li>comments 是否开启评论 true</li>
<li>tags 标签</li>
<li>categories 分类</li>
<li>permalink url中的名字（文件名）</li>
</ul>
</li>
<li>编写正文内容（MakeDown）</li>
<li>hexo clean 删除本地静态文件（Public目录），可不执行。</li>
<li>hexo g 生成本地静态文件（Public目录）</li>
<li>hexo deploy 将本地静态文件推送至github（hexo d）</li>
</ul>
<h4 id="添加菜单"><a href="#添加菜单" class="headerlink" title="添加菜单"></a>添加菜单</h4><p>进入theme目录，编辑_config_yml文件，找到menu:字段，在该字段下添加一个字段。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:  home: &#x2F;  about: &#x2F;about  ......</span><br></pre></td></tr></table></figure>

<p>然后找到lanhuages目录，编辑zh-Hans.yml文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:  home: 首页  about: 关于作者  ......</span><br></pre></td></tr></table></figure>

<p>更新页面显示的中文字符，最后进入theme目录下的Source目录，新增一个about目录，里面写一个index.html文件。</p>
<h4 id="文章内插入图片"><a href="#文章内插入图片" class="headerlink" title="文章内插入图片"></a>文章内插入图片</h4><p>在文章中写入:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](&#x2F;upload_image&#x2F;1.jpg)</span><br></pre></td></tr></table></figure>

<p>　　然后进入themes-主题名-source-upload_image目录下(自己创建)，将图片放到这个目录下，就可以了。</p>
<p>说明：当执行hexo g命令时，会自动把图片复制到 public文件的upload_image目录下。</p>
<h3 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h3><h4 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h4><p>　　在根目录下的_config.yml文件中，可以修改标题，作者等信息。打开编辑该文件，注意：每一个值的冒号后面都有一个半角空格！</p>
<ul>
<li>未生效的写法：title:nMask的博客</li>
<li>能生效的写法：title:[空格]nMask的博客</li>
</ul>
<h4 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h4><p>访问<a href="http://www.zhihu.com/question/24422335" target="_blank" rel="noopener">主题列表</a>，获取主题代码。</p>
<p>进入themes目录，进入以下操作：</p>
<ul>
<li><p>下载主题 (以next主题为例)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next.git（主题的地址）</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开__config.yml文件，将themes修改为next（下载到的主题文件夹的名字）</p>
</li>
<li><p>hexo g</p>
</li>
<li><p>hexo d</p>
</li>
</ul>
<p>关于hexo-next主题下的一些个性化配置，参考：<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next主题配置</a></p>
<h3 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h3><h4 id="文章中添加居中模块"><a href="#文章中添加居中模块" class="headerlink" title="文章中添加居中模块"></a>文章中添加居中模块</h4><p>文章Markdown中填写如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;blockquote class&#x3D;&quot;blockquote-center&quot;&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;&#x2F;blockquote&gt;</span><br></pre></td></tr></table></figure>



<h4 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h4><p>在目录 next/layout/_macro/下添加 my-copyright.swig：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;&lt;div class&#x3D;&quot;my_post_copyright&quot;&gt;  &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;clipboard.js&#x2F;1.5.10&#x2F;clipboard.min.js&quot;&gt;&lt;&#x2F;script&gt;  &lt;!-- JS库 sweetalert 可修改路径 --&gt;  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;http:&#x2F;&#x2F;jslibs.wuxubj.cn&#x2F;sweetalert_mini&#x2F;jquery-1.7.1.min.js&quot;&gt;&lt;&#x2F;script&gt;  &lt;script src&#x3D;&quot;http:&#x2F;&#x2F;jslibs.wuxubj.cn&#x2F;sweetalert_mini&#x2F;sweetalert.min.js&quot;&gt;&lt;&#x2F;script&gt;  &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;http:&#x2F;&#x2F;jslibs.wuxubj.cn&#x2F;sweetalert_mini&#x2F;sweetalert.mini.css&quot;&gt;  &lt;p&gt;&lt;span&gt;本文标题:&lt;&#x2F;span&gt;&lt;a href&#x3D;&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;  &lt;p&gt;&lt;span&gt;文章作者:&lt;&#x2F;span&gt;&lt;a href&#x3D;&quot;&#x2F;&quot; title&#x3D;&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;  &lt;p&gt;&lt;span&gt;发布时间:&lt;&#x2F;span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;&#x2F;p&gt;  &lt;p&gt;&lt;span&gt;最后更新:&lt;&#x2F;span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;&#x2F;p&gt;  &lt;p&gt;&lt;span&gt;原始链接:&lt;&#x2F;span&gt;&lt;a href&#x3D;&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title&#x3D;&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;&#x2F;a&gt;    &lt;span class&#x3D;&quot;copy-path&quot;  title&#x3D;&quot;点击复制文章链接&quot;&gt;&lt;i class&#x3D;&quot;fa fa-clipboard&quot; data-clipboard-text&#x3D;&quot;&#123;&#123; page.permalink &#125;&#125;&quot;  aria-label&#x3D;&quot;复制成功！&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;  &lt;&#x2F;p&gt;  &lt;p&gt;&lt;span&gt;许可协议:&lt;&#x2F;span&gt;&lt;i class&#x3D;&quot;fa fa-creative-commons&quot;&gt;&lt;&#x2F;i&gt; &lt;a rel&#x3D;&quot;license&quot; href&#x3D;&quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-nd&#x2F;4.0&#x2F;&quot; target&#x3D;&quot;_blank&quot; title&#x3D;&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;&#x2F;a&gt; 转载请保留原文链接及作者。&lt;&#x2F;p&gt;  &lt;&#x2F;div&gt;&lt;script&gt;     var clipboard &#x3D; new Clipboard(&#39;.fa-clipboard&#39;);    clipboard.on(&#39;success&#39;, $(function()&#123;      $(&quot;.fa-clipboard&quot;).click(function()&#123;        swal(&#123;             title: &quot;&quot;,             text: &#39;复制成功&#39;,             html: false,          timer: 500,             showConfirmButton: false        &#125;);      &#125;);    &#125;));  &lt;&#x2F;script&gt;&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>



<p>在目录next/source/css/_common/components/post/下添加my-post-copyright.styl：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.my_post_copyright &#123;  width: 85%;  max-width: 45em;  margin: 2.8em auto 0;  padding: 0.5em 1.0em;  border: 1px solid #d3d3d3;  font-size: 0.93rem;  line-height: 1.6em;  word-break: break-all;  background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123;  display: inline-block;  width: 5.2em;  color: #b5b5b5;  font-weight: bold;&#125;.my_post_copyright .raw &#123;  margin-left: 1em;  width: 5em;&#125;.my_post_copyright a &#123;  color: #808080;  border-bottom:0;&#125;.my_post_copyright a:hover &#123;  color: #a3d2a3;  text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123;  color: #000;&#125;.my_post_copyright .post-url:hover &#123;  font-weight: normal;&#125;.my_post_copyright .copy-path &#123;  margin-left: 1em;  width: 1em;  +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123;  color: #808080;  cursor: pointer;&#125;</span><br></pre></td></tr></table></figure>



<p>修改next/layout/_macro/post.swig，在代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;      &#123;% if not is_index %&#125;        &#123;% include &#39;wechat-subscriber.swig&#39; %&#125;      &#123;% endif %&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>



<p>之前添加增加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;      &#123;% if not is_index %&#125;        &#123;% include &#39;my-copyright.swig&#39; %&#125;      &#123;% endif %&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>



<p>修改next/source/css/_common/components/post/post.styl文件，在最后一行增加代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@import &quot;my-post-copyright&quot;</span><br></pre></td></tr></table></figure>



<p>如果要在该博文下面增加版权信息的显示，需要在 Markdown 中增加copyright: true的设置，类似：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---title: date: tags: categories: copyright: true---</span><br></pre></td></tr></table></figure>



<h4 id="自定义hexo-new生成md文件的选项"><a href="#自定义hexo-new生成md文件的选项" class="headerlink" title="自定义hexo new生成md文件的选项"></a>自定义hexo new生成md文件的选项</h4><p>在/scaffolds/post.md文件中添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:categories: copyright: truepermalink: 01top: 0password:---</span><br></pre></td></tr></table></figure>



<h4 id="隐藏网页底部powered-By-Hexo-强力驱动"><a href="#隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="隐藏网页底部powered By Hexo / 强力驱动"></a>隐藏网页底部powered By Hexo / 强力驱动</h4><p>打开themes/next/layout/_partials/footer.swig,使用””隐藏之间的代码即可，或者直接删除。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--&lt;div class&#x3D;&quot;powered-by&quot;&gt;  &#123;&#123; __(&#39;footer.powered&#39;, &#39;&lt;a class&#x3D;&quot;theme-link&quot; rel&#x3D;&quot;external nofollow&quot; href&#x3D;&quot;https:&#x2F;&#x2F;hexo.io&quot;&gt;Hexo&lt;&#x2F;a&gt;&#39;) &#125;&#125;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;theme-info&quot;&gt;  &#123;&#123; __(&#39;footer.theme&#39;) &#125;&#125; -  &lt;a class&#x3D;&quot;theme-link&quot; rel&#x3D;&quot;external nofollow&quot; href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next&quot;&gt;    NexT.&#123;&#123; theme.scheme &#125;&#125;  &lt;&#x2F;a&gt;&lt;&#x2F;div&gt;--&gt;</span><br></pre></td></tr></table></figure>



<h4 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h4><p>打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件,在meta标签后面插入这样一段代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;    (function()&#123;        if(&#39;&#123;&#123; page.password &#125;&#125;&#39;)&#123;            if (prompt(&#39;请输入文章密码&#39;) !&#x3D;&#x3D; &#39;&#123;&#123; page.password &#125;&#125;&#39;)&#123;                alert(&#39;密码错误！&#39;);                history.back();            &#125;        &#125;    &#125;)();&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>



<p>然后文章中添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password: nmask</span><br></pre></td></tr></table></figure>



<p>如果password后面为空，则表示不用密码。</p>
<h4 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h4><p>修改 hero-generator-index 插件，把文件：node_modules/hexo-generator-index/lib/generator.js 内的代码替换为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;use strict&#39;;var pagination &#x3D; require(&#39;hexo-pagination&#39;);module.exports &#x3D; function(locals)&#123;  var config &#x3D; this.config;  var posts &#x3D; locals.posts;    posts.data &#x3D; posts.data.sort(function(a, b) &#123;        if(a.top &amp;&amp; b.top) &#123; &#x2F;&#x2F; 两篇文章top都有定义            if(a.top &#x3D;&#x3D; b.top) return b.date - a.date; &#x2F;&#x2F; 若top值一样则按照文章日期降序排            else return b.top - a.top; &#x2F;&#x2F; 否则按照top值降序排        &#125;        else if(a.top &amp;&amp; !b.top) &#123; &#x2F;&#x2F; 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）            return -1;        &#125;        else if(!a.top &amp;&amp; b.top) &#123;            return 1;        &#125;        else return b.date - a.date; &#x2F;&#x2F; 都没定义按照文章日期降序排    &#125;);  var paginationDir &#x3D; config.pagination_dir || &#39;page&#39;;  return pagination(&#39;&#39;, posts, &#123;    perPage: config.index_generator.per_page,    layout: [&#39;index&#39;, &#39;archive&#39;],    format: paginationDir + &#39;&#x2F;%d&#x2F;&#39;,    data: &#123;      __index: true    &#125;  &#125;);&#125;;</span><br></pre></td></tr></table></figure>



<p>在文章中添加 top 值，数值越大文章越靠前，如:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---......copyright: truetop: 100---</span><br></pre></td></tr></table></figure>



<p>默认不设置则为0，数值相同时按时间排序。</p>
<h4 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h4><p>打开/themes/next/layout/_partials/head.swig文件，在maximum-scale=1”/&gt;后添加如下代码:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;pace&#x2F;1.0.2&#x2F;pace.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;link href&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;pace&#x2F;1.0.2&#x2F;themes&#x2F;pink&#x2F;pace-theme-flash.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br></pre></td></tr></table></figure>



<p>但是，默认的是粉色的，要改变颜色可以在/themes/next/layout/_partials/head.swig文件中添加如下代码（接在刚才link的后面）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;style&gt;    .pace .pace-progress &#123;        background: #1E92FB; &#x2F;*进度条颜色*&#x2F;        height: 3px;    &#125;    .pace .pace-progress-inner &#123;         box-shadow: 0 0 10px #1E92FB, 0 0 5px     #1E92FB; &#x2F;*阴影颜色*&#x2F;    &#125;    .pace .pace-activity &#123;        border-top-color: #1E92FB;    &#x2F;*上边框颜色*&#x2F;        border-left-color: #1E92FB;    &#x2F;*左边框颜色*&#x2F;    &#125;&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>



<h4 id="添加热度"><a href="#添加热度" class="headerlink" title="添加热度"></a>添加热度</h4><p>next主题集成leanCloud，打开/themes/next/layout/_macro/post.swig<br>在”leancloud-visitors-count”&gt;标签后面添加℃。<br>然后打开，/themes/next/languages/zh-Hans.yml，将visitors内容改为<em>热度</em>即可。</p>
<h4 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h4><p>打开\themes\next\source\css_custom\custom.styl,向里面加入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 主页文章添加阴影效果 .post &#123;   margin-top: 60px;   margin-bottom: 60px;   padding: 25px;   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);  &#125;</span><br></pre></td></tr></table></figure>



<h4 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h4><p>修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成</p>
<h4 id="鼠标点击小红心的设置"><a href="#鼠标点击小红心的设置" class="headerlink" title="鼠标点击小红心的设置"></a>鼠标点击小红心的设置</h4><p>将 <a href="https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/love.js" target="_blank" rel="noopener">love.js</a> 文件添加到 \themes\next\source\js\src 文件目录下。<br>找到 \themes\next\layout_layout.swing 文件， 在文件的后面， 标签之前 添加以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;love.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>



<h4 id="背景的设置"><a href="#背景的设置" class="headerlink" title="背景的设置"></a>背景的设置</h4><p>将 <a href="https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/particle.js" target="_blank" rel="noopener">particle.js</a> 文件添加到 \themes\next\source\js\src 文件目录下。<br>找到 \themes\next\layout_layout.swing 文件， 在文件的后面，标签之前 添加以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 背景动画 --&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;src&#x2F;particle.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>



<h4 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h4><p>将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。<br>找到文件 themes\next\source\css_custom\custom.styl ，添加如下 css 样式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.post-body p a &#123;  color: #0593d3;  border-bottom: none;  &amp;:hover &#123;    color: #0477ab;    text-decoration: underline;  &#125;&#125;</span><br></pre></td></tr></table></figure>



<h4 id="博文压缩"><a href="#博文压缩" class="headerlink" title="博文压缩"></a>博文压缩</h4><p>在站点的根目录下执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install gulp -g$ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br></pre></td></tr></table></figure>



<p>在博客根目录下新建 gulpfile.js ，并填入以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var gulp &#x3D; require(&#39;gulp&#39;);var minifycss &#x3D; require(&#39;gulp-minify-css&#39;);var uglify &#x3D; require(&#39;gulp-uglify&#39;);var htmlmin &#x3D; require(&#39;gulp-htmlmin&#39;);var htmlclean &#x3D; require(&#39;gulp-htmlclean&#39;);&#x2F;&#x2F; 压缩 public 目录 cssgulp.task(&#39;minify-css&#39;, function() &#123;    return gulp.src(&#39;.&#x2F;public&#x2F;**&#x2F;*.css&#39;)        .pipe(minifycss())        .pipe(gulp.dest(&#39;.&#x2F;public&#39;));&#125;);&#x2F;&#x2F; 压缩 public 目录 htmlgulp.task(&#39;minify-html&#39;, function() &#123;  return gulp.src(&#39;.&#x2F;public&#x2F;**&#x2F;*.html&#39;)    .pipe(htmlclean())    .pipe(htmlmin(&#123;         removeComments: true,         minifyJS: true,         minifyCSS: true,         minifyURLs: true,    &#125;))    .pipe(gulp.dest(&#39;.&#x2F;public&#39;))&#125;);&#x2F;&#x2F; 压缩 public&#x2F;js 目录 jsgulp.task(&#39;minify-js&#39;, function() &#123;    return gulp.src(&#39;.&#x2F;public&#x2F;**&#x2F;*.js&#39;)        .pipe(uglify())        .pipe(gulp.dest(&#39;.&#x2F;public&#39;));&#125;);&#x2F;&#x2F; 执行 gulp 命令时执行的任务gulp.task(&#39;default&#39;, [    &#39;minify-html&#39;,&#39;minify-css&#39;,&#39;minify-js&#39;]);</span><br></pre></td></tr></table></figure>



<p>生成博文是执行 hexo g &amp;&amp; gulp 就会根据 gulpfile.js 中的配置，对 public 目录中的静态资源文件进行压缩。</p>
<h4 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h4><p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>



<p>编辑 站点配置文件，新增以下内容到任意位置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:  path: search.xml  field: post  format: html  limit: 10000</span><br></pre></td></tr></table></figure>



<h4 id="增加阅读排行统计页面"><a href="#增加阅读排行统计页面" class="headerlink" title="增加阅读排行统计页面"></a>增加阅读排行统计页面</h4><p>首先我们可以使用leancloud来统计页面阅读数量，以及储存这些信息，然后通过leancloud提供的api编写js脚本来获取阅读数量信息，并展示在页面上。<br>首先新建一个page页面，hexo new page “”,然后编辑此.md文件，写下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn1.lncld.net&#x2F;static&#x2F;js&#x2F;av-core-mini-0.6.1.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script&gt;AV.initialize(&quot;&quot;, &quot;&quot;);&lt;&#x2F;script&gt; &#x2F;&#x2F;需要写上leancloud的key&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;  var time&#x3D;0  var title&#x3D;&quot;&quot;  var url&#x3D;&quot;&quot;  var query &#x3D; new AV.Query(&#39;Counter&#39;);&#x2F;&#x2F;表名  query.notEqualTo(&#39;id&#39;,0); &#x2F;&#x2F;id不为0的结果  query.descending(&#39;time&#39;); &#x2F;&#x2F;结果按阅读次数降序排序  query.limit(20);  &#x2F;&#x2F;最终只返回10条结果  query.find().then(function (todo) &#123;    for (var i&#x3D;0;i&lt;10;i++)&#123;       var result&#x3D;todo[i].attributes;      time&#x3D;result.time;  &#x2F;&#x2F;阅读次数      title&#x3D;result.title; &#x2F;&#x2F;文章标题      url&#x3D;result.url;     &#x2F;&#x2F;文章url      var content&#x3D;&quot;&lt;p&gt;&quot;+&quot;&lt;font color&#x3D;&#39;#0477ab&#39;&gt;&quot;+&quot;【阅读次数:&quot;+time+&quot;】&quot;+&quot;&lt;a href&#x3D;&#39;&quot;+&quot;http:&#x2F;&#x2F;thief.one&quot;+url+&quot;&#39;&gt;&quot;+title+&quot;&lt;&#x2F;font&gt;&quot;+&quot;&lt;&#x2F;a&gt;&quot;+&quot;&lt;&#x2F;p&gt;&quot;;      &#x2F;&#x2F; document.write(&quot;&lt;a href&#x3D;&#39;&quot;+&quot;http:&#x2F;&#x2F;thief.one&#x2F;&quot;+url+&quot;&#39;&gt;&quot;+title+&quot;&lt;&#x2F;a&gt;&quot;+&quot;    Readtimes:&quot;+time+&quot;&lt;br&gt;&quot;);      document.getElementById(&quot;heheda&quot;).innerHTML+&#x3D;content    &#125;  &#125;, function (error) &#123;    console.log(&quot;error&quot;);  &#125;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>



<p>最终的效果查看：<a href="http://thief.one/count" target="_blank" rel="noopener">http://thief.one/count</a></p>
<h4 id="多说替换成来必力评论"><a href="#多说替换成来必力评论" class="headerlink" title="多说替换成来必力评论"></a>多说替换成来必力评论</h4><p>更新于@2017年5月18日<br>多说已经宣布下线了，因此我找了个来必力评论系统来替换，以下是替换的教程，教程内容来自：<a href="https://blog.smoker.cc/web/add-comments-livere-for-hexo-theme-next.html" target="_blank" rel="noopener">https://blog.smoker.cc/web/add-comments-livere-for-hexo-theme-next.html</a></p>
<p>来必力评价<br>优点：界面美观<br>缺点：不支持数据导入，加载慢</p>
<p>首先在 _config.yml 文件中添加如下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">livere_uid: your uid</span><br></pre></td></tr></table></figure>



<p>其中 livere_uid 即注册来必力获取到的 uid。<br>在 layout/_scripts/third-party/comments/ 目录中添加 livere.swig，文件内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname and not theme.disqus_shortname and not theme.hypercomments_id and not theme.gentie_productKey %&#125;  &#123;% if theme.livere_uid %&#125;    &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;      (function(d, s) &#123;        var j, e &#x3D; d.getElementsByTagName(s)[0];        if (typeof LivereTower &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123; return; &#125;        j &#x3D; d.createElement(s);        j.src &#x3D; &#39;https:&#x2F;&#x2F;cdn-city.livere.com&#x2F;js&#x2F;embed.dist.js&#39;;        j.async &#x3D; true;        e.parentNode.insertBefore(j, e);      &#125;)(document, &#39;script&#39;);    &lt;&#x2F;script&gt;  &#123;% endif %&#125;&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>



<p>优先使用其他评论插件，如果其他评论插件没有开启，且LiveRe评论插件配置开启了，则使用LiveRe。其中脚本代码为上一步管理页面中获取到的。在layout/_scripts/third-party/comments.swig文件中追加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include &#39;.&#x2F;comments&#x2F;livere.swig&#39; %&#125;</span><br></pre></td></tr></table></figure>



<p>引入 LiveRe 评论插件。<br>最后，在 layout/_partials/comments.swig 文件中条件最后追加LiveRe插件是否引用的判断逻辑：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% elseif theme.livere_uid %&#125;      &lt;div id&#x3D;&quot;lv-container&quot; data-id&#x3D;&quot;city&quot; data-uid&#x3D;&quot;&#123;&#123; theme.livere_uid &#125;&#125;&quot;&gt;&lt;&#x2F;div&gt;&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>



<p>最后打开博客瞧瞧吧！</p>
<h4 id="多说替换成网易云跟贴"><a href="#多说替换成网易云跟贴" class="headerlink" title="多说替换成网易云跟贴"></a>多说替换成网易云跟贴</h4><p>最好的方法就是更新next主题，因为最新版本的主题已经支持这几种评论。<br>如果不想更新主题，则往下看：</p>
<p>网易云跟贴评价：<br>性能稳定，功能中规中矩，支持数据导入</p>
<p>首先在 _config.yml 文件中添加如下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gentie_productKey: #your-gentie-product-key</span><br></pre></td></tr></table></figure>



<p>其中 gentie_productKey 即注册网易云跟贴获取到的key。<br>在 layout/_scripts/third-party/comments/ 目录中添加 gentie.swig，文件内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname and not theme.disqus_shortname and not theme.hypercomments_id %&#125;  &#123;% if theme.gentie_productKey %&#125;    &#123;% set gentie_productKey &#x3D; theme.gentie_productKey %&#125;    &lt;script&gt;      var cloudTieConfig &#x3D; &#123;        url: document.location.href,         sourceId: &quot;&quot;,        productKey: &quot;&#123;&#123;gentie_productKey&#125;&#125;&quot;,        target: &quot;cloud-tie-wrapper&quot;      &#125;;    &lt;&#x2F;script&gt;    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;img1.ws.126.net&#x2F;f2e&#x2F;tie&#x2F;yun&#x2F;sdk&#x2F;loader.js&quot;&gt;&lt;&#x2F;script&gt;  &#123;% endif %&#125;&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>



<p>在layout/_scripts/third-party/comments.swig文件中追加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include &#39;.&#x2F;comments&#x2F;gentie.swig&#39; %&#125;</span><br></pre></td></tr></table></figure>



<p>最后，在 layout/_partials/comments.swig 文件中条件最后追加网易云跟帖插件引用的判断逻辑：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% elseif theme.gentie_productKey %&#125;      &lt;div id&#x3D;&quot;cloud-tie-wrapper&quot; class&#x3D;&quot;cloud-tie-wrapper&quot;&gt;      &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>



<h3 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a>报错解决</h3><h4 id="（一）Deployer-not-found-git"><a href="#（一）Deployer-not-found-git" class="headerlink" title="（一）Deployer not found: git"></a>（一）Deployer not found: git</h4><p>当编辑__config.yml文件，将type: git设置完成后，运行hexo g 报错：<em>git not found</em><br>解决方案：可以在MyBlog目录下运行: <em>npm install hexo-deployer-git –save</em>。</p>
<h4 id="（二）permission-denied"><a href="#（二）permission-denied" class="headerlink" title="（二）permission denied"></a>（二）permission denied</h4><p>当执行: hexo deploy 报错时，把__config.yml中的github连接形式从ssh改成http。</p>
<h4 id="（三）当在themes目录下载主题时，报错。"><a href="#（三）当在themes目录下载主题时，报错。" class="headerlink" title="（三）当在themes目录下载主题时，报错。"></a>（三）当在themes目录下载主题时，报错。</h4><p>将该目录只读属性取消。</p>
<h4 id="（四）genrnate-报错"><a href="#（四）genrnate-报错" class="headerlink" title="（四）genrnate 报错"></a>（四）genrnate 报错</h4><p>检查_config.yml配置中，键值对冒号后面是否已经预留了一个半角空格。</p>
<h4 id="（五）ERROR-Plugin-load-failed-hexo-generator-feed"><a href="#（五）ERROR-Plugin-load-failed-hexo-generator-feed" class="headerlink" title="（五）ERROR Plugin load failed: hexo-generator-feed"></a>（五）ERROR Plugin load failed: hexo-generator-feed</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feednpm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<h4 id="（六）fatal-The-remote-end-hung-up-unexpectedly"><a href="#（六）fatal-The-remote-end-hung-up-unexpectedly" class="headerlink" title="（六）fatal: The remote end hung up unexpectedly"></a>（六）fatal: The remote end hung up unexpectedly</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config https.postBuffer 524288000$ git config http.postBuffer 524288000$ git config ssh.postBuffer 524288000</span><br></pre></td></tr></table></figure>

<h4 id="（七）hero-d推送的内容有问题"><a href="#（七）hero-d推送的内容有问题" class="headerlink" title="（七）hero d推送的内容有问题"></a>（七）hero d推送的内容有问题</h4><p>　　首先检查下.deploy_git文件夹下的.git文件是否存在，此.git文件指定了hexo d时推送public文件夹，而不是所有的内容。如果此.git文件不存在，则会出现推送内容错误。<br>　　用npm install hexo-deployer-git –save生成的.deploy_git不包含.git文件，因此正确的做法是.deploy_git文件夹也需要备份，然后再用npm install hexo-deployer-git –save更新一下其内容即可。<br>　　如果已经出现这个错误，则删除.deploy_git，重新hexo d。</p>
<h4 id="（八）hexo-s报错"><a href="#（八）hexo-s报错" class="headerlink" title="（八）hexo s报错"></a>（八）hexo s报错</h4><p>在新版本的mac上，安装运行hexo会报此错误，但不影响使用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123; Error: Cannot find module</span><br></pre></td></tr></table></figure>



<p>解决方案：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo --no-optional</span><br></pre></td></tr></table></figure>



<h3 id="Local-Search错误"><a href="#Local-Search错误" class="headerlink" title="Local Search错误"></a>Local Search错误</h3><p>　　最近发现Local Search搜索出来的连接有错误，到不是说连接不对，而是当我在/aaa/目录下搜索一个页面时，跳转到了/aaa/正确的连接/，这样明显是正确的，应该是跟目录+跳转的目录。<br>　　网上搜索了下，没有类似的案例，那么自己动手修改吧，打开node_modules/hexo-generator-searchdb/templates下的xml.ejs文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;url&gt;&lt;%- (&quot;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;&quot;+post.path) %&gt;&lt;&#x2F;url&gt;</span><br></pre></td></tr></table></figure>



<p>说明：将这个文件的两处url都改成这样就可以了。</p>
<h3 id="异地同步博客内容"><a href="#异地同步博客内容" class="headerlink" title="异地同步博客内容"></a>异地同步博客内容</h3><p>　　现在电脑已经很普及了，因为一般来说我们都是公司一台电脑，家里一台电脑，那么如何将两台电脑上博客的内容同步内，即两台电脑上都可以编辑更新博客？<br>要解决这个问题，首先我们要清楚我们博客文件的组成：</p>
<ul>
<li>node_modules</li>
<li>public</li>
<li>scaffolds</li>
<li>source</li>
<li>themes</li>
<li>_config_yml</li>
<li>db.json</li>
<li>package.json</li>
<li>.deploy_git</li>
</ul>
<p>　　以上为利用hexo生成的博客全部内容，那么当我们执行hexo d时，正真被推送到github上的又有哪些内容呢？<br>　　我们可以看下github上的tengzhangchao.github.io项目，发现里面只有Public目录下的内容。也就是说，我们博客上呈现的内容，其实就是public下的文件内容。那么这个Pulic目录是怎么生成的呢？<br>　　一开始hexo init的时候是没有public目录的，而当我们运行hexo g命令时，public目录被生成了，换句话说hexo g命令就是用来生成博客文件的（会根据_config.yml，source目录文件以及themes目录下文件生成）。同样当我们运行hexo clean命令时，public目录被删除了。<br>　　好了，既然我们知道了决定博客显示内容的只有一个Public目录，而public目录又是可以动态生成的，那么其实我们只要在不同电脑上同步可以生成Public目录的文件即可。</p>
<p>以下文件以及目录是必须要同步的：</p>
<ul>
<li>source</li>
<li>themes</li>
<li>_config.yml</li>
<li>db.json</li>
<li>package.json</li>
<li>.deploy_git</li>
</ul>
<p>　　同步的方式有很多种，可以每次更新后都备份到一个地址。我采用github去备份，也就是新建一个项目用来存放以上文件，每次更新后推送到github上，用作备份同步。<br>　　同步完必须的文件后，怎么再其他电脑上也可以更新博客呢？<br>　　前提假设我们现在配置了一台新电脑，里面没有安装任何有关博客的东西，那么我们开始吧：</p>
<ul>
<li>下载node.js并安装（官网下载安装），默认会安装npm。</li>
<li>下载安装git（官网下载安装）</li>
<li>下载安装hexo。方法：打开cmd 运行<em>npm install -g hexo</em>（要翻墙）</li>
<li>新建一个文件夹，如MyBlog</li>
<li>进入该文件夹内，右击运行git，输入：<em>hexo init</em>（生成hexo模板，可能要翻墙)</li>
</ul>
<p>　　我们重复了一开始搭建博客的步骤，重新生成了一个新的模板，这个模板中包含了hexo生成的一些文件。</p>
<ul>
<li>git clone 我们备份的项目，生成一个文件夹，如：MyBlogData</li>
<li>将MyBlog里面的node_modules、scaffolds文件夹复制到MyBlogData里面。</li>
</ul>
<p>　　做完这些，从表面上看，两台电脑上MyBlogData目录下的文件应该都是一样的了。那么我们运行hexo g<br>hexo d试试，如果会报错，则往下看。</p>
<ul>
<li>这是因为.deploy_git没有同步，在MyBlogData目录内运行:<em>npm install hexo-deployer-git –save</em>后再次推送即可</li>
</ul>
<p>　　总结流程：当我们每次更新MyBlog内容后，先利用hexo将public推送到github，然后再将其余必须同步的文件利用git推送到github。</p>
<h3 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h3><p>seo优化对于网站是否能被搜索引擎快速收录有很大帮助，因此适当做一些seo还是有必要的，以下内容参考：<a href="https://lancelot_lewis.coding.me/2016/08/16/blog/Hexo-NexT-SEO/" target="_blank" rel="noopener">https://lancelot_lewis.coding.me/2016/08/16/blog/Hexo-NexT-SEO/</a></p>
<h4 id="添加sitemap文件"><a href="#添加sitemap文件" class="headerlink" title="添加sitemap文件"></a>添加sitemap文件</h4><p>安装以下2个插件，然后重启hexo后，网站根目录（source）下会生成sitemap.xml与baidusitemap.xml文件，搜索引擎在爬取时会参照文件中的url去收录。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save-devhexo d -gnpm install hexo-generator-baidu-sitemap --save-devhexo d -g</span><br></pre></td></tr></table></figure>



<h4 id="添加robots-txt"><a href="#添加robots-txt" class="headerlink" title="添加robots.txt"></a>添加robots.txt</h4><p>新建robots.txt文件，添加以下文件内容，把robots.txt放在hexo站点的source文件下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: * Allow: &#x2F;Allow: &#x2F;archives&#x2F;Disallow: &#x2F;vendors&#x2F;Disallow: &#x2F;js&#x2F;Disallow: &#x2F;css&#x2F;Disallow: &#x2F;fonts&#x2F;Disallow: &#x2F;vendors&#x2F;Disallow: &#x2F;fancybox&#x2F;Sitemap: http:&#x2F;&#x2F;thief.one&#x2F;sitemap.xmlSitemap: http:&#x2F;&#x2F;thief.one&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure>



<h4 id="首页title的优化"><a href="#首页title的优化" class="headerlink" title="首页title的优化"></a>首页title的优化</h4><p>更改index.swig文件，文件路径是your-hexo-site\themes\next\layout，将下面代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% block title %&#125;  &#123;&#123; config.title &#125;&#125;  &#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>



<p>改成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% block title %&#125;  &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125;  &#123;% endblock</span><br></pre></td></tr></table></figure>



<p>观察首页title就是标题+描述了。</p>
<h3 id="MakeDown语法"><a href="#MakeDown语法" class="headerlink" title="MakeDown语法"></a>MakeDown语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[hexo](http:&#x2F;&#x2F;www.baidu.com)  表示超链接##大标题###小标题&lt;!-- more --&gt;&lt;!-- 标签别名 --&gt;&#123;% cq %&#125;blah blah blah&#123;% endcq %&#125;空格  中文全角空格表示---文章标题---&gt;内容     区块引用*1*2*3列表*内容*     表示强调内容![Alt text](&#x2F;path&#x2F;to&#x2F;img.jpg)  图片![](&#x2F;upload_image&#x2F;20161012&#x2F;1.png)</span><br></pre></td></tr></table></figure>

<p>详细Markdown语法请参考：<a href="http://www.appinn.com/markdown/" target="_blank" rel="noopener">MakeDown语法</a></p>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="http://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="noopener">http://www.jianshu.com/p/f054333ac9e6</a><br><a href="https://neveryu.github.io/2016/09/30/hexo-next-two/" target="_blank" rel="noopener">https://neveryu.github.io/2016/09/30/hexo-next-two/</a></p>
<p>*提醒：在更新博客内容时，最好先在本地调试完毕后（hexo server），再推送到github上。</p>
]]></content>
      <tags>
        <tag>转载</tag>
      </tags>
  </entry>
</search>
